unit Google.Model.GoogleAnalytics.PageView;

interface

uses
  Google.Model.GoogleAnalytics.Interfaces,
  Google.Controller.GoogleAnalytics.Interfaces;

type
  TModelGoogleAnalyticsPageView = Class(TInterfacedObject, iModelGooglePageView, iCommand)
  private
    FParent: iControllerGoogleAnalytics;

    FHostName: String;
    FPage: String;
    FTitle: String;

    FURL: String;
  public
    constructor Create(AParent: iControllerGoogleAnalytics);
    destructor Destroy; override;
    class function New(AParent: iControllerGoogleAnalytics): iModelGooglePageView;

    //iModelGooglePageView
    function HostName: String; overload;
    function HostName(Value: String): iModelGooglePageView; overload;
    function Page: String; overload;
    function Page(Value: String): iModelGooglePageView; overload;
    function Title: String; overload;
    function Title(Value: String): iModelGooglePageView; overload;
    function Send: iCommand;

    //iCommand
    function Execute: iCommand;
  End;

implementation

{ TModelGoogleAnalyticsPageView }

constructor TModelGoogleAnalyticsPageView.Create(AParent: iControllerGoogleAnalytics);
begin
  FParent :=  AParent;
  FURL    :=  'https://www.google-analytics.com/collect';
end;

destructor TModelGoogleAnalyticsPageView.Destroy;
begin

  inherited;
end;

function TModelGoogleAnalyticsPageView.Execute: iCommand;
var
  HTTPClient: TNetHTTPClient;
  Params: TStringList;
begin
  HTTPClient:= TNetHTTPClient.Create(nil);
  try
    Params := TStringList.Create;
    try
      Params.Values['v']  := '1';
      Params.Values['tid']:= FParent.GooglePropertyID;
      Params.Values['cid']:= FParent.ClienteID;

      Params.Values['t']  := 'screenview';
      Params.Values['an'] := FParent.AppInfo.AppName;
      Params.Values['av'] := FParent.AppInfo.AppVersion;
      Params.Values['aid']  := FParent.AppInfo.AppID;
      Params.Values['aiid'] := FParent.AppInfo.AppInstalerID;

      Params.Values['cd']   := FScreenName;

      HTTPClient.Post(FURL, Params, nil, TEncoding.Default);
    finally
      Params.Free;
    end;
  finally
    HTTPClient.Free;
  end;
end;

function TModelGoogleAnalyticsPageView.HostName: String;
begin
  Result  :=  FHostName;
end;

function TModelGoogleAnalyticsPageView.HostName(
  Value: String): iModelGooglePageView;
begin
  Result  :=  Self;

  FHostName :=  Value;
end;

class function TModelGoogleAnalyticsPageView.New(AParent: iControllerGoogleAnalytics): iModelGooglePageView;
begin
  Result := Self.Create(AParent);
end;

function TModelGoogleAnalyticsPageView.Page(
  Value: String): iModelGooglePageView;
begin
  Result  :=  Self;

  FPage :=  Value;
end;

function TModelGoogleAnalyticsPageView.Page: String;
begin
  Result  :=  FPage;
end;

function TModelGoogleAnalyticsPageView.Send: iCommand;
begin
  Result  :=  Self;
end;

function TModelGoogleAnalyticsPageView.Title(
  Value: String): iModelGooglePageView;
begin
  Result  :=  Self;

  FTitle :=  Value;
end;

function TModelGoogleAnalyticsPageView.Title: String;
begin
  Result  :=  FTitle;
end;

end.
