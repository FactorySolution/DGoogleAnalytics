unit Google.Model.GoogleAnalytics.Factory;

interface

uses
  Google.Model.GoogleAnalytics.Factory.Interfaces,
  Google.Model.GoogleAnalytics.Interfaces,
  Google.Controller.GoogleAnalytics.Interfaces;

type
  TModelGoogleAnalyticsFactory = Class(TInterfacedObject, iModelGoogleAnalyticsFactory)
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iModelGoogleAnalyticsFactory;

    function AppInfo: iModelGoogleAppInfo;
    function ScreeView(AParent: iControllerGoogleAnalytics): iModelGoogleScreeView;
    function PageView(AParent: iControllerGoogleAnalytics): iModelGooglePageView;
    function Session(AParent:iControllerGoogleAnalytics): iModelGoogleSession;
  End;

implementation

uses
  Google.Model.GoogleAnalytics.ScreenView,
  Google.Model.GoogleAnalytics.AppInfo, Google.Model.GoogleAnalytics.PageView;

{ TModelGoogleAnalyticsFactory }

function TModelGoogleAnalyticsFactory.AppInfo: iModelGoogleAppInfo;
begin
  Result  :=  TModelGoogleAppInfo.New;
end;

constructor TModelGoogleAnalyticsFactory.Create;
begin

end;

destructor TModelGoogleAnalyticsFactory.Destroy;
begin

  inherited;
end;

class function TModelGoogleAnalyticsFactory.New: iModelGoogleAnalyticsFactory;
begin
  Result := Self.Create;
end;

function TModelGoogleAnalyticsFactory.PageView(
  AParent: iControllerGoogleAnalytics): iModelGooglePageView;
begin
  Result  :=  TModelGoogleAnalyticsPageView.New(AParent);
end;

function TModelGoogleAnalyticsFactory.ScreeView(
  AParent: iControllerGoogleAnalytics): iModelGoogleScreeView;
begin
  Result  :=  TModelGoogleAnalyticsScreenView.New(AParent);
end;

function TModelGoogleAnalyticsFactory.Session(
  AParent: iControllerGoogleAnalytics): iModelGoogleSession;
begin
  Result  :=  TModelGoogleAnalyticsSession.New(AParent);
end;

end.
